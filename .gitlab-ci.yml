before_script:
  - export _R_CHECK_CRAN_INCOMING_=FALSE
  - export _R_CHECK_FORCE_SUGGESTS_=TRUE

r-base:
  stage: test
  image: r-base
  script:
    - apt-get update -qq
    - apt-get install -y --no-install-recommends libcurl4-openssl-dev libssh2-1-dev libssl-dev git
    - Rscript -e 'install.packages(c("devtools", "roxygen2", "testthat", "covr"), repos = "https://cran.rstudio.com/")'
    - Rscript -e 'devtools::install_deps()'
    - Rscript -e 'devtools::check()'
    - Rscript -e 'covr::codecov(type = "all", quiet = FALSE)'
    - Rscript -e 'cov <- covr::package_coverage(type = "all", quiet = FALSE); covr::report(cov, file = "index.html"); cov'
    - mkdir -p coverage && mv lib coverage/ && mv index.html coverage/
  artifacts:
    stages:
  - build
  - deploy

build:
  stage: build
  image: conoria/apkbuilder-alpine
  script:
  - mkdir -p /home/maker/packages
  - chown -R maker:abuild /home/maker/packages
  - mkdir -p /keys
  - cp 'conor@conr.ca-584aeee5.rsa.pub' /keys
  - echo "${abuild_key}" > '/keys/conor@conr.ca-584aeee5.rsa'
  - chown -R maker:abuild /keys
  - ./pkg.sh
  - mkdir -p $PWD/apks
  - cp -R /home/maker/packages/alpine-pandoc/* $PWD/apks
  artifacts:
    expire_in: 1d
    paths:
    - apks

pages:
  stage: deploy
  image: alpine
  dependencies:
    - build
  script:
    - mv apks/ public/
  artifacts:
    expire_in: 1 day
    paths:
      - public
  only:
    - master
    paths:
      - coverage/

pages:
  stage: deploy
  image: alpine
  dependencies:
    - r-base
  script:
    - mv coverage/ public/
  artifacts:
    expire_in: 30 days
    paths:
      - public
  only:
    - master
