% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_station_adv.R
\name{find_station_adv}
\alias{find_station_adv}
\title{Find a Historical Climate Data station (advanced)}
\usage{
find_station_adv(name = NULL, ignore.case = TRUE, glob = FALSE,
  province = NULL, baseline = NULL, type = "daily", duplicates = FALSE,
  target = NULL, dist = 0:100, sort = TRUE, ...)
}
\arguments{
\item{name}{character; optional character string or a regular expression to be matched against known station names. See \code{\link{grep}} for details.}

\item{ignore.case}{logical; by default the search for station names is not case-sensitive.}

\item{glob}{logical; use wildcards in station name as detailed in \code{link{glob2rx}}.}

\item{province}{character; optional character string to filter by a given province. Use full name or two-letter code, e.g. ON for Ontario.}

\item{baseline}{vector; optional vector with a start and end year for a desired baseline.}

\item{type}{character; type of data to search for. Only used if a baseline is specified. Defaults to "hourly".}

\item{duplicates}{Boolean; if TRUE, will attempt to provide combinations of stations (at the same coordinates) that provide enough baseline data.}

\item{target}{numeric; optional numeric value of the target (reference) station, or a vector of length 2 containing latitude and longitude (in that order).}

\item{dist}{numeric; vector with a range of distance from the target in km. Only used if a target is specified. (default is 0:100)}

\item{sort}{Boolean; if TRUE (default), will sort the resultant table by distance from `target`. Only used if a target is specified.}

\item{...}{Additional arguments passed to \code{\link{grep}}.}
}
\value{
A \code{tbl_df}, containing details of any matching HCD stations.
}
\description{
Search for stations in the Historical Climate Data inventory name, available data, and/or distance to a target.
}
\examples{
# Find all stations with names beginning in  "Reg".
find_station_adv("Reg*", glob = TRUE)

# Find stations named "Yellowknife", with hourly data available from 1971 to 2000.
find_station_adv("Yellowknife", baseline = c(1971, 2000), type = "hourly")

# Find all stations between 0 and 100 km from Station No. 5051.
find_station_adv(target = 5051, dist = 0:100)

}
\author{
Conor I. Anderson
}

